{
  "name": "passport-authic",
  "version": "0.0.3",
  "description": "Authic strategy for Passport",
  "author": {
    "name": "Authic Team",
    "email": "support@authic.com",
    "url": "https://www.authic.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/authic/passport-authic.git"
  },
  "bugs": {
    "url": "http://github.com/authic/passport-authic/issues"
  },
  "main": "./lib/passport-authic",
  "dependencies": {
    "pkginfo": "0.2.x",
    "passport-oauth": "~0.1.2"
  },
  "devDependencies": {
    "vows": "0.6.x"
  },
  "scripts": {
    "test": "NODE_PATH=lib node_modules/.bin/vows test/*-test.js"
  },
  "engines": {
    "node": ">= 0.4.0"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "http://www.opensource.org/licenses/MIT"
    }
  ],
  "keywords": [
    "passport",
    "authic",
    "auth",
    "authn",
    "authentication",
    "identity"
  ],
  "readme": "# passport-authic\n\nA [Passport](http://passportjs.org/) strategy for authenticating with the hosted user identity service [Authic](https://www.authic.com/)\nvia OAuth 2.0.\n\nIt depends on the following modules:\n    \n    \"dependencies\": {\n      \"express\": \"*\",\n      \"ejs\": \"*\",\n      \"passport\": \"*\"\n    }\n\n\n## Installation\n\n    $ npm install passport-authic\n\n## Usage\n\n#### Configure The Strategy\n    \n    // Authic Settings \n    var AuthicStrategy = require('passport-authic').Strategy,\n    authic_client_id =  '<Your Authic client key>',\n    authic_client_secret = '<Your Authic client secret>',\n    authic_callback_url = \"http://localhost:3000/auth/authic/callback\", // Needs to match what you setup in Authic\n    authic_subdomain =  \"<Your Authic subdomain>\";\n\n    passport.use(new AuthicStrategy({\n      clientID: authic_client_id,\n      clientSecret: authic_client_secret,\n      subdomain: authic_subdomain,\n      callbackURL: authic_callback_url\n    },\n    function(accessToken, refreshToken, profile, done) {\n      User.findOrCreate({ authicId: profile.id }, function (err, user) {\n        return done(err, user);\n      });\n    }));\n\n#### Authenticating Users with Authic\n\nAuthenticate users with `passport.authenticate()`:\n\n    app.get('/login', function(req, res){\n      res.redirect('/auth/authic?authic_action=signin');\n    });\n\n    app.get('/register', function(req, res){\n      res.redirect('/auth/authic?authic_action=signup');\n    });\n\n    app.get('/auth/authic',\n      passport.authenticate('authic'),\n      function(req, res){\n        // The request will be redirected to Authic for authentication, so\n        // this function will not be called.\n      });\n\n    app.get('/auth/authic/callback',\n      passport.authenticate('authic', { failureRedirect: '/login' }),\n      function(req, res) {\n        // Successful authentication, redirect home.\n        res.redirect('/');\n      });\n\nIt is recommended to create a simple middleware to check for an authenticated user (see an example of how to use it below):\n\n    function ensureAuthenticated(req, res, next) { \n      if (req.isAuthenticated()) { return next(); }\n      res.redirect('/login')\n    }\n\nYou might want to set a route to send the user off to Authic's hosted account screen (this uses the ensureAuthenticated middleware):\n\n    app.get('/account', ensureAuthenticated, function(req, res){\n      res.redirect('https://' + authic_subdomain + '.authic.com/edit_account');\n    });\n\nYou will probably also want a logout route. This will log your user out of both your app and the Authic server:\n\n    app.get('/logout', function(req, res){\n      req.logout();\n      // Set this to where ever you want to redirect to after Authic has signed your user out\n      var return_url = encodeURIComponent(\"http://localhost:3000\");\n      res.redirect('https://' + authic_subdomain + '.authic.com/authic_sign_out?&return_url=' + return_url);\n    });\n\n## Example App\n\nRefer to the examples folder in the root of this project for a working sample application using passport-authic.\n\n## About Authic\n[Authic](https://www.authic.com) is a secure, brandable cloud authentication service that integrates into your web app in seconds leaving you to concentrate on your core business functionality.\n\n## License\n\n(The MIT License)\n\nCopyright (c) 2012 Authic.com\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",
  "readmeFilename": "README.md",
  "_id": "passport-authic@0.0.3",
  "_from": "passport-authic@*"
}
