var EventNotifier = require('./EventNotifier'),
	MongoRepository = require('mongorepository').Repository;

EventHandler = function() {
	var signedMsaRepository = new MongoRepository(process.env.DATA_STORE_CONNECTION_STRING, 'signed-msa'),
		pendingMsaRepository = new MongoRepository(process.env.DATA_STORE_CONNECTION_STRING, 'pending-msa'),
		eventNotifier = new EventNotifier();


	var quoteRequest = function(quote, done) {
			eventNotifier.raise('quote_request', quote, done);
		};

	var transitQuoteRequest = function(quote, done) {
			eventNotifier.raise('transit_quote_request', quote, done);
		};

	var servicePurchase = function(quoteReference, done) {
			eventNotifier.raise("service_purchase", quoteReference, done);
		};

	var p2pVlanServicePurchase = function(quoteReference, done) {
			eventNotifier.raise('p2pvlan_service_purchase', quoteReference, done);
		};

	var transitServicePurchase = function(quoteReference, done) {
			eventNotifier.raise('transit_service_purchase', quoteReference, done);
		};

	var transitNonManualServicePurchase = function(quoteReference, vlantag, iprange, done) {
			var message = {
				quoteReference: quoteReference,
				vlantag: vlantag,
				iprange: iprange
			}
			eventNotifier.raise('transit_service_purchase', message, done);
		};

	var serviceUpdate = function(serviceReference, done) {
			eventNotifier.raise('service_update', serviceReference, done);
		};

	var p2pVlanServiceUpdate = function(p2pVlanServiceReference, done) {
			eventNotifier.raise('p2pVlan_service_update', p2pVlanServiceReference, done);
		};

	var transitServiceUpdate = function(transitServiceReference, done) {
			eventNotifier.raise('transit_service_update', transitServiceReference, done);
		};

	var updateCompanyDetails = function(companyDetails, done) {
			eventNotifier.raise('update_company_details', companyDetails, done);
		};

	var addSignedMsa = function(signedMSA, callback) {
			signedMsaRepository.add(signedMSA, callback);
		};

	var addPendingMsa = function(pendingMSA, callback) {
			pendingMsaRepository.add(pendingMSA, callback);
		};

	var updateTransitVlanTag = function(transitVlanTag, callback) {
			eventNotifier.raise('add_transit_vlan_tag', transitVlanTag, callback);
		};

	return {
		quoteRequest: quoteRequest,
		transitQuoteRequest: transitQuoteRequest,
		servicePurchase: servicePurchase,
		p2pVlanServicePurchase: p2pVlanServicePurchase,
		transitServicePurchase: transitServicePurchase,
		transitNonManualServicePurchase: transitNonManualServicePurchase,
		updateCompanyDetails: updateCompanyDetails,
		p2pVlanServiceUpdate: p2pVlanServiceUpdate,
		transitServiceUpdate: transitServiceUpdate,
		serviceUpdate: serviceUpdate,
		addSignedMsa: addSignedMsa,
		addPendingMsa: addPendingMsa,
		updateTransitVlanTag: updateTransitVlanTag
	};
};

module.exports = EventHandler;