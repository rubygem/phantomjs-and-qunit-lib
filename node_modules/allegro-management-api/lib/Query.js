var DataCentreStore = require('../DataCentreStore'),
	SubscriptionsStore = require('../SubscriptionsStore'),
	RouteStore = require('../RouteStore'),
	TransitRouteStore = require('../TransitRouteStore'),
	QuoteStore = require('../QuoteStore'),
	TransitQuoteStore = require('../TransitQuoteStore'),
	SingleP2PServiceStore = require('../SingleP2PServiceStore'),
	TransitServiceStore = require('../TransitServiceStore'),
	P2PVlanServicesStore = require('../P2PVlanServicesStore'),
	CompanyDetailsStore = require('../CompanyDetailsStore'),
	DeviceStore = require('../DeviceStore'),
	PortStore = require('../PortStore'),
	TransitPortStore = require('../TransitPortStore'),
	TransitVlanTagsViewStore = require('../TransitVlanTagsViewStore');

var Query = function() {
		var dataCentreStore = new DataCentreStore(),
			routeStore = new RouteStore(),
			transitRouteStore = new TransitRouteStore(),
			subscriptionsStore = new SubscriptionsStore(),
			deviceStore = new DeviceStore(),
			quoteStore = new QuoteStore(),
			transitQuoteStore = new TransitQuoteStore(),
			portStore = new PortStore(),
			companyDetailsStore = new CompanyDetailsStore(),
			transitPortStore = new TransitPortStore(),
			singleP2PServiceStore = new SingleP2PServiceStore(),
			transitServiceStore = new TransitServiceStore(),
			p2pVlanServiceStore = new P2PVlanServicesStore(),
			transitVlanTagsViewStore = new TransitVlanTagsViewStore();

		var dataCentre = function(requestedDataCentre, callback) {
				dataCentreStore.findDataCentre(requestedDataCentre, function(dataCentre) {
					callback(dataCentre);
				});
			};

		var routes = function(callback) {
				routeStore.all(function(routes) {
					callback(routes);
				});
			};

		var transitRoute = function(transitProviderName, callback) {
				transitRouteStore.find(transitProviderName, callback)
			};

		var devices = function(callback) {
				deviceStore.all(function(devices) {
					callback(devices);
				});
			};


		var device = function(deviceName, callback) {
				deviceStore.find(deviceName, function(devices) {
					callback(devices);
				});
			};

		var dataCentres = function(callback) {
				dataCentreStore.allDataCentres(function(dataCentres) {
					callback(dataCentres);
				});
			};

		var dailySummary = function(day, callback) {
				quotes(day, function(quotes) {
					transitQuotes(day, function(transitQuotes) {
						singleP2PServicesByDay(day, function(singleP2PServices) {
							transitServicesByDay(day, function(transitServices) {
								p2pVlanServicesByDay(day, function(p2pVlanServices) {
									numberOfServicesProvisionedToday = singleP2PServices.length + p2pVlanServices.length;
									callback({
										quotes: quotes.length,
										transitQuotes: transitQuotes.length,
										services: numberOfServicesProvisionedToday
									});
								});
							});
						});
					});
				});
			}


		var quotes = function(day, callback) {
				quoteStore.findByDate(day, function(quotes) {
					callback(quotes);
				});
			}

		var transitQuotes = function(day, callback) {
				transitQuoteStore.findByDate(day, function(quotes) {
					callback(quotes);
				});
			}

		var ports = function(callback) {
				portStore.all(function(ports) {
					callback(ports);
				});
			}

		var transitPorts = function(callback) {
				transitPortStore.all(function(ports) {
					callback(ports);
				});
			}

		function transitPort(transitProviderName, callback) {
			transitPortStore.findByProvider(transitProviderName, function(transitPort) {
				callback(transitPort);
			})

		}

		function transitProviders(callback) {
			transitPortStore.all(function(transitPorts) {
				callback(transitPorts);
			});
		}

		var port = function(portName, dataCentre, callback) {
				if (portName == "new") {
					var port = {
						name: "new",
						size: "1Gb",
						data_centre: dataCentre
					};
					callback(port);
				} else {
					portStore.find(portName, function(port) {
						callback(port);
					});
				}
			}

		var singleP2PServices = function(callback) {
				singleP2PServiceStore.all(callback);
			}

		var singleP2PServicesByDay = function(day, callback) {
				singleP2PServiceStore.findByDate(day, function(services) {
					callback(services);
				});
			}

		var p2pVlanServices = function(callback) {
				p2pVlanServiceStore.all(function(services) {
					callback(services);
				});
			}

		var p2pVlanServicesByDay = function(day, callback) {
				p2pVlanServiceStore.findByDate(day, function(services) {
					callback(services);
				});
			}

		var transitServices = function(callback) {
				transitServiceStore.all(function(services) {
					callback(services);
				});
			}

		var transitServicesByDay = function(day, callback) {
				transitServiceStore.findByDate(day, function(services) {
					callback(services);
				});
			}


		var subscriptions = function(callback) {
				subscriptionsStore.all(function(subscriptions) {
					callback(subscriptions);
				});
			};

		function allCompanies(callback) {
			companyDetailsStore.all(callback);
		};

		function vlanTags(providerName, callback) {
			transitVlanTagsViewStore.find(providerName, callback);
		};

		return {
			dataCentre: dataCentre,
			routes: routes,
			dataCentres: dataCentres,
			subscriptions: subscriptions,
			devices: devices,
			device: device,
			dailySummary: dailySummary,
			quotes: quotes,
			singleP2PServicesByDay: singleP2PServicesByDay,
			ports: ports,
			transitPorts: transitPorts,
			transitRoute: transitRoute,
			allCompanies: allCompanies,
			transitQuotes: transitQuotes,
			port: port,
			p2pVlanServicesByDay: p2pVlanServicesByDay,
			transitServicesByDay: transitServicesByDay,
			transitProviders: transitProviders,
			singleP2PServices: singleP2PServices,
			p2pVlanServices: p2pVlanServices,
			transitServices: transitServices,
			transitPort: transitPort,
			vlanTags: vlanTags
		};
	};

module.exports = new Query();